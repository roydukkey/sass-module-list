// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group internal
////

@use 'sass:meta'
@use 'sass-exception/src/exception/parameter'
@use 'sass-exception/src/exception/parameter-type'


///
/// Returns a valid index for a list of a given length; otherwise, an error message stating the reason the index is invalid.
///
/// @param {String} $context - The name of the function or mixin issuing the error.
/// @param {String} $name - The name of the index parameter which is being validated.
///	@param {Number} $value - The value of the index parameter which is being validated. A negative value will be transformed to the respective positive index value.
///	@param {String} $length - The length of the list for which the index is validated against.
/// @return {String | Number}
///
/// @access public
/// @require parameter.parameter
/// @require parameter-type.parameter-type
///
@function validate-index($context, $name, $value, $length)

	@if meta.type-of($value) != 'number'
		@return parameter-type.parameter-type($context, $name, $value, 'number')

	@if $value == 0
		@return parameter.parameter('List index may not be 0', $context, $name)

	// Transform negative index to positive index.
	@if $value < 1 and $value + $length + 1 > 0
		$value: $value + $length + 1

	@if $value > $length or $value < 0
		@return parameter.parameter('Invalid index #{$value} for a list with #{$length} elements', $context, $name)

	@return $value
