// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group internal
////

@use 'sass:map'
@use 'sass:meta'
@use 'exception'


///
/// Gets the value of a named parameter from an argument lists.
///
/// @param {List} $params - The argument list from which to get the named parameter.
///	@param {String} $param - The name of the parameter to get.
/// @param {*} $default - The value of the parameter when not contained in the argument list.
/// @return {*}
///
/// @access public
///
@function get($params, $param, $default)
	$params: meta.keywords($params)
	@return if(map.has-key($params, $param), map.get($params, $param), $default)


///
/// Indicates whether a specified value is invalid for a separator parameter.
///
///	@param {String} $value - The value which is being validated.
/// @return {Boolean}
///
/// @access public
///
@function separator-is-invalid($value)
	@return $value != space and $value != comma and $value != slash and $value != auto


///
/// Returns a valid index for a list of a given length; otherwise, an error message stating the reason the index is invalid.
///
/// @param {String} $param - The name of the index parameter which is being validated.
///	@param {Number} $value - The value of the index parameter which is being validated. A negative value will be transformed to the respective positive index value.
///	@param {String} $length - The length of the list for which the index is validated against.
/// @return {String | Number}
///
/// @access public
/// @require exception.type
/// @require exception.param
///
@function validate-index($param, $value, $length)

	@if meta.type-of($value) != 'number'
		@return exception.type($param, $value, 'number')

	@if $value == 0
		@return exception.param('List index may not be 0', $param)

	// Transform negative index to positive index.
	@if $value < 1 and $value + $length + 1 > 0
		$value: $value + $length + 1

	@if $value > $length or $value < 0
		@return exception.param('Invalid index #{$value} for a list with #{$length} elements', $param)

	@return $value
