// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group api
////

@use 'sass:meta'
@use '../internal'


///
/// Tests whether all items in a list satisfy the test implemented by the specified function.
///
/// @param {List} $list - The list from which items will be tested.
/// @param {Function} $predicate - The function that tests each item for a condition. The first parameter is the current item being processed in the list. The second parameter is the index of the current item being processed in the list. The third parameter is the list being processed. The returned value will be compared for truthiness.
/// @param {ArgList} $args - Additional parameters which are provided to predicate function.
/// @return {Boolean}
///
/// @throw `#{$predicate}` is not a function.
///
/// @access public
/// @require internal.$exception-function
/// @require internal.exception-type
///
@function every($list, $predicate, $args...)
	internal.$exception-function: 'every'

	@if meta.type-of($predicate) != 'function'
		@error internal.exception-type('predicate', $predicate, 'function')

	$index: 1

	@each $item in $list

		@if not meta.call($predicate, $item, $index, $list, $args...)
			@return false

		$index: $index + 1

	@return true

