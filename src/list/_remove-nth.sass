// Copyright (c) roydukkey. All rights reserved.
// Licensed under the MIT. See LICENSE file in the project root for full license information.
////
/// @author roydukkey
/// @group api
////

@use 'sass:list'
@use 'sass:meta'
@use 'sass-exception/src/exception/is-separator-invalid'
@use 'sass-exception/src/exception/separator'
@use 'sass-exception/src/exception/validate-index'
@use 'slice'


///
/// Returns a copy of a list without the value at a given index.
///
/// @param {List} $list - The list to which the value is to be removed.
/// @param {Number} $index - The index at which the value is to be removed. A negative index can be used, indicating an offset from the end of the list.
/// @param {String} $separator [auto] - The type of separator to be used by the copied list.
/// @return {List}
///
/// @throw `#{$index}` is not a number.
/// @throw List index may not be 0.
/// @throw Invalid index #{$index} for a list with #{length} elements.
/// @throw Must be "space", "comma", "slash", or "auto".
///
/// @access public
/// @require is-separator-invalid.is-separator-invalid
/// @require separator.separator
/// @require slice.slice
/// @require validate-index.validate-index
///
@function remove-nth($list, $index, $separator: auto)
	$index: validate-index.validate-index('remove-nth', 'index', $index, $list)

	@if meta.type-of($index) != 'number'
		@error $index

	@if is-separator-invalid.is-separator-invalid($separator)
		@error separator.separator('remove-nth')

	@if $index == 1
		@return slice.slice($list, $index + 1)

	$length: list.length($list)

	@if $index == $length
		@return slice.slice($list, 1, $length - 1)

	@return list.join(slice.slice($list, 1, $index - 1), slice.slice($list, $index + 1), $separator)


